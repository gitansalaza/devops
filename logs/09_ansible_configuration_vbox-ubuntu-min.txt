ansalaza@vbox-ubuntu20-min:~$ sudo useradd -m -s /bin/bash devops
ansalaza@vbox-ubuntu20-min:~$ sudo passwd devops
New password:
Retype new password:
passwd: password updated successfully
ansalaza@vbox-ubuntu20-min:~$ sudo usermod -aG sudo devops
ansalaza@vbox-ubuntu20-min:~$ sudo su - devops
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

devops@vbox-ubuntu20-min:~$ sudo cat /etc/os-release
NAME="Ubuntu"
VERSION="20.04.3 LTS (Focal Fossa)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 20.04.3 LTS"
VERSION_ID="20.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=focal
UBUNTU_CODENAME=focal
devops@vbox-ubuntu20-min:~$ whoami
devops
devops@vbox-ubuntu20-min:~$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/devops/.ssh/id_rsa):
Created directory '/home/devops/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/devops/.ssh/id_rsa
Your public key has been saved in /home/devops/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:WsGe/tPajCDIHuTgjZ9gDTqhhHxWGgWuAvIRwMxb1ts devops@vbox-ubuntu20-min
The key's randomart image is:
+---[RSA 3072]----+
|=...o.           |
| +.+.. .         |
|o =o .o o        |
|=o..+. E o       |
|++++.   S        |
|++oX . +         |
|+ = B o o  .     |
| o + o . o.+.    |
|    +     +oo    |
+----[SHA256]-----+
devops@vbox-ubuntu20-min:~$ ssh-copy-id 192.168.100.4
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/devops/.ssh/id_rsa.pub"
The authenticity of host '192.168.100.4 (192.168.100.4)' can't be established.
ECDSA key fingerprint is SHA256:8tSo7kq6+AIBgVW0j0Zhnqh/w6ZmFYASDCOfwl2pfbQ.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
devops@192.168.100.4's password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh '192.168.100.4'"
and check to make sure that only the key(s) you wanted were added.

devops@vbox-ubuntu20-min:~$ ssh-copy-id 192.168.100.6
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/devops/.ssh/id_rsa.pub"
The authenticity of host '192.168.100.6 (192.168.100.6)' can't be established.
ECDSA key fingerprint is SHA256:IrpLvhvLe7BPWeHCMKdMcC6/YrH6CdSz6Yf5PjZbJZk.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
devops@192.168.100.6's password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh '192.168.100.6'"
and check to make sure that only the key(s) you wanted were added.

devops@vbox-ubuntu20-min:~$ ssh 192.168.100.4
Last login: Sat Apr  9 21:25:53 2022
[devops@vbox-centos7-min ~]$ hostname -f
vbox-centos7-min
[devops@vbox-centos7-min ~]$ whoami
devops
[devops@vbox-centos7-min ~]$ exit
logout
Connection to 192.168.100.4 closed.
devops@vbox-ubuntu20-min:~$ ssh 192.168.100.6
Web console: https://vbox-fedora-server-35:9090/ or https://192.168.100.6:9090/

Last login: Sat Apr  9 20:25:53 2022
[devops@vbox-fedora-server-35 ~]$ whoami
devops
[devops@vbox-fedora-server-35 ~]$ hostname -f
vbox-fedora-server-35
[devops@vbox-fedora-server-35 ~]$ exit
logout
Connection to 192.168.100.6 closed.
devops@vbox-ubuntu20-min:~$ sudo vi /etc/ansible/hosts
devops@vbox-ubuntu20-min:~$ ansible all --list-hosts
  hosts (2):
    192.168.100.4
    192.168.100.6
devops@vbox-ubuntu20-min:~$ ansible all -m ping
192.168.100.4 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
192.168.100.6 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
devops@vbox-ubuntu20-min:~$ ansible all -m command -a 'uptime'
192.168.100.4 | CHANGED | rc=0 >>
 21:28:39 up  2:06,  2 users,  load average: 0.00, 0.01, 0.05
192.168.100.6 | CHANGED | rc=0 >>
 20:28:40 up  1:02,  2 users,  load average: 0.03, 0.04, 0.05
devops@vbox-ubuntu20-min:~$ mkdir scripts
devops@vbox-ubuntu20-min:~$ cd scripts/
devops@vbox-ubuntu20-min:~/scripts$ mkdir ansible
devops@vbox-ubuntu20-min:~/scripts$ cd ansible
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml

PLAY [Install Apache Server] ***************************************************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************************************************
fatal: [192.168.100.4]: FAILED! => {"msg": "Missing sudo password"}

PLAY RECAP *********************************************************************************************************************************************************
192.168.100.4              : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0

devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml
ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to be in '/home/devops/scripts/ansible/install_apache_tompat.yaml': line 7, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  tasks:
    - name: Installing apache on ubuntu
      ^ here
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml

PLAY [Install Apache Server] ***************************************************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************************************************
fatal: [192.168.100.4]: FAILED! => {"msg": "Missing sudo password"}

PLAY RECAP *********************************************************************************************************************************************************
192.168.100.4              : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0

devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml
ERROR! 'sudo' is not a valid attribute for a Play

The error appears to be in '/home/devops/scripts/ansible/install_apache_tompat.yaml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: Install Apache Server
  ^ here
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo vi /etc/ansible/hosts
[sudo] password for devops:
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo vi /etc/ansible/hosts
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml

PLAY [Install Apache Server] ***************************************************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************************************************
fatal: [192.168.100.4]: FAILED! => {"msg": "Missing sudo password"}

PLAY RECAP *********************************************************************************************************************************************************
192.168.100.4              : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0

devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml
ERROR! 'sudo' is not a valid attribute for a Play

The error appears to be in '/home/devops/scripts/ansible/install_apache_tompat.yaml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: Install Apache Server
  ^ here
devops@vbox-ubuntu20-min:~/scripts/ansible$ vi install_apache_tompat.yaml
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook install_apache_tompat.yaml

PLAY [Install Apache Server] ***************************************************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************************************************
fatal: [192.168.100.4]: FAILED! => {"msg": "Missing sudo password"}

PLAY RECAP *********************************************************************************************************************************************************
192.168.100.4              : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0

devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-playbook --help
usage: ansible-playbook [-h] [--version] [-v] [-k] [--private-key PRIVATE_KEY_FILE] [-u REMOTE_USER] [-c CONNECTION] [-T TIMEOUT]
                        [--ssh-common-args SSH_COMMON_ARGS] [--sftp-extra-args SFTP_EXTRA_ARGS] [--scp-extra-args SCP_EXTRA_ARGS]
                        [--ssh-extra-args SSH_EXTRA_ARGS] [--force-handlers] [--flush-cache] [-b] [--become-method BECOME_METHOD] [--become-user BECOME_USER] [-K]
                        [-t TAGS] [--skip-tags SKIP_TAGS] [-C] [--syntax-check] [-D] [-i INVENTORY] [--list-hosts] [-l SUBSET] [-e EXTRA_VARS]
                        [--vault-id VAULT_IDS] [--ask-vault-pass | --vault-password-file VAULT_PASSWORD_FILES] [-f FORKS] [-M MODULE_PATH] [--list-tasks]
                        [--list-tags] [--step] [--start-at-task START_AT_TASK]
                        playbook [playbook ...]

Runs Ansible playbooks, executing the defined tasks on the targeted hosts.

positional arguments:
  playbook              Playbook(s)

optional arguments:
  --ask-vault-pass      ask for vault password
  --flush-cache         clear the fact cache for every host in inventory
  --force-handlers      run handlers even if a task fails
  --list-hosts          outputs a list of matching hosts; does not execute anything else
  --list-tags           list all available tags
  --list-tasks          list all tasks that would be executed
  --skip-tags SKIP_TAGS
                        only run plays and tasks whose tags do not match these values
  --start-at-task START_AT_TASK
                        start the playbook at the task matching this name
  --step                one-step-at-a-time: confirm each task before running
  --syntax-check        perform a syntax check on the playbook, but do not execute it
  --vault-id VAULT_IDS  the vault identity to use
  --vault-password-file VAULT_PASSWORD_FILES
                        vault password file
  --version             show program's version number, config file location, configured module search path, module location, executable location and exit
  -C, --check           don't make any changes; instead, try to predict some of the changes that may occur
  -D, --diff            when changing (small) files and templates, show the differences in those files; works great with --check
  -M MODULE_PATH, --module-path MODULE_PATH
                        prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)
  -e EXTRA_VARS, --extra-vars EXTRA_VARS
                        set additional variables as key=value or YAML/JSON, if filename prepend with @
  -f FORKS, --forks FORKS
                        specify number of parallel processes to use (default=5)
  -h, --help            show this help message and exit
  -i INVENTORY, --inventory INVENTORY, --inventory-file INVENTORY
                        specify inventory host path or comma separated host list. --inventory-file is deprecated
  -l SUBSET, --limit SUBSET
                        further limit selected hosts to an additional pattern
  -t TAGS, --tags TAGS  only run plays and tasks tagged with these values
  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable connection debugging)

Connection Options:
  control as whom and how to connect to hosts

  --private-key PRIVATE_KEY_FILE, --key-file PRIVATE_KEY_FILE
                        use this file to authenticate the connection
  --scp-extra-args SCP_EXTRA_ARGS
                        specify extra arguments to pass to scp only (e.g. -l)
  --sftp-extra-args SFTP_EXTRA_ARGS
                        specify extra arguments to pass to sftp only (e.g. -f, -l)
  --ssh-common-args SSH_COMMON_ARGS
                        specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
  --ssh-extra-args SSH_EXTRA_ARGS
                        specify extra arguments to pass to ssh only (e.g. -R)
  -T TIMEOUT, --timeout TIMEOUT
                        override the connection timeout in seconds (default=10)
  -c CONNECTION, --connection CONNECTION
                        connection type to use (default=smart)
  -k, --ask-pass        ask for connection password
  -u REMOTE_USER, --user REMOTE_USER
                        connect as this user (default=None)

Privilege Escalation Options:
  control how and which user you become as on target hosts

  --become-method BECOME_METHOD
                        privilege escalation method to use (default=sudo), use `ansible-doc -t become -l` to list valid choices.
  --become-user BECOME_USER
                        run operations as this user (default=root)
  -K, --ask-become-pass
                        ask for privilege escalation password
  -b, --become          run operations with become (does not imply password prompting)
devops@vbox-ubuntu20-min:~/scripts/ansible$ /become
-bash: /become: No such file or directory
devops@vbox-ubuntu20-min:~/scripts/ansible$ ansible-doc -t become -l
doas       Do As user
dzdo       Centrify's Direct Authorize
enable     Switch to elevated permissions on a network device
ksu        Kerberos substitute user
machinectl Systemd's machinectl privilege escalation
pbrun      PowerBroker run
pfexec     profile based execution
pmrun      Privilege Manager run
runas      Run As user
sesu       CA Privileged Access Manager
su         Substitute User
sudo       Substitute User DO
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo vi /etc/ansible/ansible.cfg
[sudo] password for devops:
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo vi /etc/ansible/ansible.cfg
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo cat /etc/ssh/sshd_config | sed '^PasswordAuthentication yes/PasswordAuthentication no/g'
sed: -e expression #1, char 1: unknown command: `^'
devops@vbox-ubuntu20-min:~/scripts/ansible$ sudo cat /etc/ssh/sshd_config | sed 'PasswordAuthentication yes/PasswordAuthentication no/g'
sed: -e expression #1, char 2: extra characters after command
devops@vbox-ubuntu20-min:~/scripts/ansible$
